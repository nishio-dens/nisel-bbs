-------------------------------------------------
ノード間のプロトコルコマンド
-------------------------------------------------

http://example.com:3997/command/ping
       ~~~~~~~~~~~~~~~~ +++++++ ~~~~~
       サーバアドレス　　command 要求コマンド


/ping

要求を受けたノードは 「PONG 相手ノードのIPアドレス」を返す.
要求元のノードは，相手の存在を確認できると同時に，自身のIPアドレスを取得することができる．


/have/カテゴリ識別子/トピック識別子

指定したトピックを保持しているかどうかを返す．
ローカルHDDに保持しているトピックは含まない．
保持している場合は，「I_HAVE カテゴリ識別子 トピック識別子 コメント数 トピックの活性度」を返す．
バックアップ管理をしているトピックの場合，Haveリクエスト参照でトピックの活性度を0にする．

/get/カテゴリ識別子/トピック識別子/コメント番号

要求を受けたノードは，自身が管理している指定トピックを返す．
コメント番号は0-0の場合は，保持しているすべてのコメントを返す．
また，例えば3番めから5番めまでのコメントを取得する場合は3-5を，
2番目から最後までのコメントを取得するには 2-0 を指定する．
コメントを保持していない場合は，404 Not Foundで空のコメントを返す.

/read/カテゴリ識別子

要求を受けたノードは，ネットワーク上から指定されたカテゴリに所属するトピック一覧を取得する．


/read/local/カテゴリ識別子

ローカルに保存されているトピック一覧を取得する．


/read/カテゴリ識別子/トピック識別子/コメント番号


要求を受けたノードは，ネットワーク上から指定されたトピックを取得する．
取得したメッセージはローカルHDDに保存し，かつ要求元へとコメントを送信する．
もし，ネットワーク上に存在するトピックとローカルHDDに存在するトピックのデータが
完全一致する場合は，ローカルHDDからデータを取得し，要求元へとコメントを送信する．　


/getlocal/カテゴリ識別子/トピック識別子/コメント番号

要求を受けたノードは，自身がローカルHDDに保持しているトピックを返す．
コメント番号は0-0の場合は，保持しているすべてのコメントを返す．
また，例えば3番めから5番めまでのコメントを取得する場合は3-5を，
2番目から最後までのコメントを取得するには 2-0 を指定する．
コメントを保持していない場合は，404 Not Found.

/getlocal/カテゴリ識別子

要求を受けたノードは，自身がローカルHDDに保持しているトピック一覧を返す．


/canbackup/カテゴリ識別子/トピック識別子

バックアップトピック管理ノードとなることができるかを問い合わせる．
要求が受け入れられた場合は「ACCEPT」，拒否された場合は「REJECT」を返す．


/backup/カテゴリ識別子/トピック識別子

バックアップトピック管理ノードに対してのみ要求を行う．
指定したトピックのバックアップを管理してもらうよう要求する．
要求を行う際，BODYには，
「
コメント1
コメント2
コメント3 ・・・」
と続く．もし，要求が受け入れられた場合は，「ACCEPT」を，
拒否された場合は，「REJECT」を返す．


/write/

ネットワーク上の指定したトピックにコメントを書き込む．
DHT上からトピック管理ノードを探しだし，
トピック管理ノードかどうかをismanage要求で問い合わせ，
その後，トピック管理ノードだった場合には，そのノードに対してwrite要求を行う．
要求を行う際，BODYには，
「category=~~~&topic=~~~&author=~~~&mail=~~~&message=~~~」
と続く．~~~のあとはURLエンコーディングされている．
書き込みが成功した場合は，「ACCEPT」を，
失敗した場合は「REJECT」を返す．
BODYにuser=trueを入れると，ACCEPTとREJECTではなくて，利用者向けの返信が返ってくる.


/canmanage/カテゴリ識別子/トピック識別子

指定したトピックを管理できるかどうかを問い合わせる．
「ACCEPT」，「REJECT」を返す．


/ismanage/カテゴリ識別子/トピック識別子

指定したトピックの管理ノードかどうかを問い合わせる．
「YES」か「NO」を返す．


/manage/

指定したトピックを管理してもらうよう要求する．
トピックを新規作成する際に利用する．
要求を行う際，BODYには，
「category=~~~&title=~~~&author=~~~&mail=~~~&password=~~~&message=~~~」
と続く．~~~のあとはURLエンコーディングされている．
カテゴリ識別子は，categoryをSHA-1に通したものである．
トピック識別子は，要求を受け取ったノードが生成する．

もし，要求が受け入れられた場合は，「ACCEPT」を，
拒否された場合は，「REJECT」を返す．
BODYにuser=trueを入れると，ACCEPTとREJECTではなくて，利用者向けの返信が返ってくる.

/status

ノードの情報を取得


/delete/

指定したトピックを削除する。
要求を行う際，BODYには，
「category=~~~&topic=~~~&password=~~~&no=~~~&first=~~~」
とする．noには削除するコメント番号が入る．
noに0が指定されると、トピック自体を削除する．
passwordにはトピックを作成した人が知っているパスワードが入る．
トピックを削除・編集する際には、パスワードが正しくないと行うことができない．
firstには1または0が入る．1の場合は一番初めに削除要求を受けたノードであり，
ネットワーク上に存在する複数のトピック管理ノード及びバックアップノードに対して削除要求を行う．
0の場合は，ただ自身が保持しているトピックを削除するのみである．
deleteが正しく行われるとDELETE_ACCEPT・・・を，拒否されるとDELETE_REJECTを返す.
BODYにuser=trueを入れると，ACCEPTとREJECTではなくて，利用者向けの返信が返ってくる.


/-------------------------------------------------------
DHTに投入するメッセージ
-------------------------------------------------------/

トピックの管理ノード，バックアップ管理ノードに関すること

key = カテゴリ識別子+トピック識別子
value =
「
<num>コメント数</num>
<activity>活性度</activity>
<size>コメントメッセージのデータ量</size>
<node id="1">
<ip>IPアドレス</ip>
</node>
<node id="2">
<ip>IPアドレス</ip>
</node>
以下nodeの繰り返し
」

id=1のノードがトピックの管理者


トピック一覧取得

key = カテゴリ識別子
value = "<tid>トピック識別子</tid><title>トピックタイトル</title><num>コメント数</num><activity>活性度</activity>"


/--------------------------------------------------------
注意事項
--------------------------------------------------------/
port番号はDHT,トピックやりとりの通信とも同じ番号を利用する必要がある．
例えば，ポート3997を利用する場合は，UDP，TCPとも3997である必要がある.
